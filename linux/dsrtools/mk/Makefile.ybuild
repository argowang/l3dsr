#
# Sub-makefile for creating and prepping yahoo build environments.
#

include mk/macros.mk

$(call varchklist_call,\
	PKGARCH \
	OSMACRO OSMACROVER OSDIST \
	BUILDRUNCMD)

ifneq ($(USE_MOCK),)
$(call varchklist_call,\
	MOCK \
	MOCK_SRPM_ARGS MOCK_RPM_ARGS)
else
$(call varchklist_call,\
	ROOTIMG ROOT)
endif

ifeq ($(PKGARCH),i686)
rootarch = --i386
endif

BINBUILDRUNCMD = $(BUILDRUNCMD) '$(ROOT)'

ifneq ($(USE_MOCK),)
  rootsh = \
	$(pound)! /bin/bash\
	\neval \"\$$@\"
else
  yinstcmd ?= /usr/local/bin/yinst
  rootcmd  ?= /home/y/bin/yroot

  rootsh = \
	$(pound)! /bin/bash\
	\nrootname=\"\$$1\"\
	\nshift\
	\nexec $(rootcmd) \"\$$rootname\" --cmd \"\$$@\"

  rootyinst = $(BINBUILDRUNCMD) \
	       "$(yinstcmd) ls '$(1)' > /dev/null || \
		 $(yinstcmd) i '$(1)'"

  rootkrpmbase = $(BINBUILDRUNCMD) \
		  "rpm -q '$(1)' > /dev/null || \
		    sudo rpm -i --oldpackage '$(2)/$(1).rpm'"

  rootyum   = $(BINBUILDRUNCMD) \
	       "rpm -q '$(1)' > /dev/null || \
		 sudo yum install -y $(2) '$(1)'"
endif


yumpkgs    = rpm-build

ifeq ($(OSMACRO),rhel_version)
  ifeq ($(OSMACROVER),505)
    yumpkgs += redhat-rpm-config
  endif
  ifeq ($(OSMACROVER),600)
    yumpkgs += redhat-rpm-config
  endif
endif

clean_files     = $(BUILDRUNCMD)
clobber_files   = $(clean_files)
distclean_files = $(clobber_files)


all: create_buildenv prep_buildenv

prep_buildenv: $(BUILDRUNCMD)
ifneq ($(USE_MOCK),)
	$(MOCK) $(MOCK_SRPM_ARGS) --init
	$(MOCK) $(MOCK_RPM_ARGS)  --init
	$(MOCK) $(MOCK_RPM_ARGS)  --install $(yumpkgs) \
		$(addprefix $(krepourl),$(addsuffix .rpm,$(kpkgs)))
else
	$(call rootyinst,yumbase)
	$(foreach r,$(yumpkgs),$(call rootyum,$r) || \
		{ echo >&2 "Build requires '$r' rpm."; exit 1; }$(nl))
endif

create_buildenv:
ifneq ($(USE_MOCK),)
	$(MOCK) $(MOCK_SRPM_ARGS) --scrub=all
	$(MOCK) $(MOCK_RPM_ARGS)  --scrub=all
else
	$(rootcmd) --start '$(ROOT)' > /dev/null 2>&1 || \
	  $(rootcmd) --create '$(ROOT)' $(rootarch) $(ROOTIMG)
endif

$(BUILDRUNCMD):
	rm -f -- "$@"
	echo -e "$(rootsh)" > "$@"
	chmod 0555 -- "$@"

clean clobber distclean::
	$(call scrub_files_cmd_call,$($@_files))


.PHONY: all prep_buildenv create_buildenv prep_srctree clean clobber distclean
